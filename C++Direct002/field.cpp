//=============================================================================
// 
//  弾処理 [field.cpp]
//  Author : 相馬靜雅
// 
//=============================================================================
#include "field.h"
#include "texture.h"
#include "manager.h"
#include "renderer.h"

//==========================================================================
// マクロ定義
//==========================================================================

//==========================================================================
// 静的メンバ変数宣言
//==========================================================================
int CField::m_nNumAll = 0;						// 弾の総数

//==========================================================================
// コンストラクタ
//==========================================================================
CField::CField(int nPriority) : CObject3D(nPriority)
{
	m_nTexIdx = 0;	// テクスチャのインデックス番号

	// 総数加算
	m_nNumAll++;
}

//==========================================================================
// デストラクタ
//==========================================================================
CField::~CField()
{
	
}

//==========================================================================
// 生成処理
//==========================================================================
CField *CField::Create(void)
{
	// 生成用のオブジェクト
	CField *pBullet = NULL;

	if (pBullet == NULL)
	{// NULLだったら

		// メモリの確保
		pBullet = DEBUG_NEW CField;

		//if (pBullet->GetID() < 0)
		//{// メモリ確保に失敗していたら

		//	delete pBullet;
		//	return NULL;
		//}

		if (pBullet != NULL)
		{// メモリの確保が出来ていたら

			// 初期化処理
			pBullet->Init();
		}

		return pBullet;
	}

	return NULL;
}

//==========================================================================
// 生成処理(オーバーロード)
//==========================================================================
CField *CField::Create(const D3DXVECTOR3 pos, const D3DXVECTOR3 rot)
{
	// 生成用のオブジェクト
	CField *pBullet = NULL;

	if (pBullet == NULL)
	{// NULLだったら

		// メモリの確保
		pBullet = DEBUG_NEW CField;

		//if (pBullet->GetID() < 0)
		//{// メモリ確保に失敗していたら

		//	delete pBullet;
		//	return NULL;
		//}

		if (pBullet != NULL)
		{// メモリの確保が出来ていたら

			// 位置割り当て
			pBullet->SetPosition(pos);

			// 向き割り当て
			pBullet->SetRotation(rot);

			// 初期化処理
			pBullet->Init();
		}

		return pBullet;
	}

	return NULL;
}

//==========================================================================
// 初期化処理
//==========================================================================
HRESULT CField::Init(void)
{
	HRESULT hr;

	// 各種変数の初期化
	SetSize(D3DXVECTOR3(WIDTH, 0.0f, HEIGHT));	// サイズ

	// 種類の設定
	SetType(TYPE_FIELD);

	// 初期化処理
	hr = CObject3D::Init();


	// テクスチャの割り当て
	m_nTexIdx = CManager::GetTexture()->Regist(TEXTURE);

	// テクスチャの割り当て
	BindTexture(m_nTexIdx);


	if (FAILED(hr))
	{// 失敗したとき

		return E_FAIL;
	}

	return S_OK;
}

//==========================================================================
// 終了処理
//==========================================================================
void CField::Uninit(void)
{
	// 終了処理
	CObject3D::Uninit();

	// 総数減算
	m_nNumAll--;
}

//==========================================================================
// 更新処理
//==========================================================================
void CField::Update(void)
{
	// 頂点情報設定
	CObject3D::SetVtx();
}

//==========================================================================
// 描画処理
//==========================================================================
void CField::Draw(void)
{
	CObject3D::Draw();
}

//==========================================================================
// 総数取得
//==========================================================================
int CField::GetNumAll(void)
{
	return m_nNumAll;
}
